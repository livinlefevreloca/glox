program     -> declaration* EOF ;
declaration -> varDecl | statement
statement   -> exprStmt | printStmt | blockStmt ;
blockStmt   -> "{" declaration* "}" ;
exprStmt    -> expression ";" ;
printStmt   -> "print" expression ";" ;
varDecl     -> "var" IDENTIFIER ( "=" expression )? ";" ;
expression  -> assignment* ;
assignment  -> IDENTIFIER "=" assignment | ternary ;
ternary     -> block "?" ternary ":" ternary | block
block       -> equality ( "," equality )* ;
equality    -> comparison ( ( "!=" | "==") comparison )* ;
comparison  -> term ( ( ">" | ">=" | "<=" )  term )* ;
term        -> factor ( ( "-" | "+" ) factor )* ;
factor      -> unary ( ( "*" | "/" ) unary )* ;
unary       -> ( "!" | "-") unary | primary ;
primary     -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER ;
